class Task:
    def __init__(self, description, status="Incomplete"):
        self.description = description
        self.status = status

    def mark_as_complete(self):
        self.status = "Complete"

    def __str__(self):
        return f"{self.description} - {self.status}"


class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, description):
        task = Task(description)
        self.tasks.append(task)

    def remove_task(self, description):
        for task in self.tasks:
            if task.description == description:
                self.tasks.remove(task)
                return
        print("Task not found.")

    def mark_as_complete(self, description):
        for task in self.tasks:
            if task.description == description:
                task.mark_as_complete()
                return
        print("Task not found.")

    def show_tasks(self):
        if self.tasks:
            for task in self.tasks:
                print(task)
        else:
            print("No tasks yet!")


def main():
    todo_list = ToDoList()

    while True:
        print("\n===== To-Do List Menu =====")
        print("1. Add Task")
        print("2. Remove Task")
        print("3. Mark Task as Complete")
        print("4. Show Tasks")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            description = input("Enter task description: ")
            todo_list.add_task(description)
        elif choice == "2":
            description = input("Enter task description to remove: ")
            todo_list.remove_task(description)
        elif choice == "3":
            description = input("Enter task description to mark as complete: ")
            todo_list.mark_as_complete(description)
        elif choice == "4":
            print("\n===== Tasks =====")
            todo_list.show_tasks()
        elif choice == "5":
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please choose a valid option.")


if __name__ == "__main__":
    main()
